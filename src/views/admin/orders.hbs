<div class="container-xxl flex-grow-1 container-p-y">
    <h4 class="fw-bold py-3 mb-4"><span class="text-muted fw-light">Products
            /</span>
        Orders</h4>
    <div class="col-12 mb-3">



    </div>
    <div class="row">

        <div class="col-xl-9">
            <div class="card">
                <h5 class="card-header">ORDERS</h5>
                <div class="">

                </div>
                <div class="table-responsive text-nowrap">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>User ID</th>
                                <th>Order ID</th>
                                <th>Shipping Method</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody class="table-border-bottom-0" id="template">
                            {{#each orders}}

                            <tr>
                                <td><i class="fab fa-react fa-lg text-info me-3"></i> <strong>{{this.userID}} </strong>
                                </td>
                                <td> {{this._id}} </td>
                                <td> {{this.shippingMethod}}</td>
                                <td> {{this.status}}</td>

                                <td>
                                    <div class="dropdown">
                                        <button type="button" class="btn p-0 dropdown-toggle hide-arrow"
                                            data-bs-toggle="dropdown">
                                            <i class="bx bx-dots-vertical-rounded"></i>
                                        </button>
                                        <div class="dropdown-menu">
                                            <a class="dropdown-item" href="orders/{{this._id}}"><i
                                                    class="bx bx-edit-alt me-1"></i>
                                                Edit</a>
                                        </div>
                                    </div>
                                </td>
                            </tr>

                            {{/each}}
                        </tbody>
                    </table>
                    <nav aria-label="Page navigation">
                        <ul class="pagination justify-content-center">

                        </ul>
                    </nav>
                </div>
            </div>
        </div>
        <div class="col-xl-3">
            <div class="card mb-4">
                <h5 class="card-header">Filter and sort</h5>
                <!-- Checkboxes and Radios -->
                <div class="card-body">
                    <div class="row gy-3">
                        <div class="col-md">
                            <small class="text-light fw-semibold">Filter by</small>
                            <div class="mb-3">
                                <select id="status" class="form-select">
                                    <option value="preparing">Preparing</option>
                                    <option value="delivering">Delivering</option>
                                    <option value="success">Successfully Delivered</option>
                                    <option value="delay">Delayed</option>
                                    <option value="cancel">Cancelled</option>
                                </select>
                            </div>

                        </div>

                    </div>
                </div>
                <hr class="m-0" />
                <div class="card-body">
                    <small class="text-light fw-semibold">Sort by</small>

                    <div class="mb-3">
                        <select id="time" class="form-select">
                            <option value="timeasc">Create time: oldest to lastest</option>
                            <option value="timedes">Create time: lastest to oldest</option>
                        </select>
                    </div>

                </div>
                <!-- Inline Checkboxes -->

            </div>

        </div>

    </div>
    <script src="https://unpkg.com/handlebars@latest/dist/handlebars.min.js"></script>
    <script>
        const filter = document.getElementById('status');
        const sort = document.getElementById('time');
        let filterValue = 'preparing';
        let sortValue = 'timeasc';
        filter.addEventListener('change', (event) => {
            filterValue = event.target.value;
            sortValue = sort.value;
            //console.log(filterValue);
            sortAndFilterOrders(sortValue, filterValue);
        });

        sort.addEventListener('change', (event) => {
            sortValue = event.target.value;
            filterValue = filter.value
            sortAndFilterOrders(sortValue, filterValue);
        });

        const sortAndFilterOrders = (sortValue, filterValue, page) => {
            console.log(sortValue);
            console.log(filterValue);
            const url = new URL('/admin/api/sort-and-filter-orders', window.location.origin);
            url.searchParams.append('sort', sortValue);
            url.searchParams.append('filter', filterValue);
            url.searchParams.append('page', page);
            fetch(url, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                },
            }).then((response) => response.json()).then(data => {
                console.log(data);
                let newHTML = "";
                for (let i = 0; i < data.result.length; i++) {
                    newHTML += `<tr>
                                <td><i class="fab fa-react fa-lg text-info me-3"></i> <strong>` + data.result[i].userID + ` </strong>
                                </td>
                                <td>` + data.result[i]._id + `</td>
                                <td> ` + data.result[i].shippingMethod + `</td>
                                <td> ` + data.result[i].status + `</td>

                                <td>
                                    <div class="dropdown">
                                        <button type="button" class="btn p-0 dropdown-toggle hide-arrow"
                                            data-bs-toggle="dropdown">
                                            <i class="bx bx-dots-vertical-rounded"></i>
                                        </button>
                                        <div class="dropdown-menu">
                                            <a class="dropdown-item" href="orders/`+ data.result[i]._id `"><i
                                                    class="bx bx-edit-alt me-1"></i>
                                                Edit</a>
                                        </div>
                                    </div>
                                </td>
                            </tr>`;

                }
                document.querySelector('.table-border-bottom-0').innerHTML = newHTML;
                // Update pagination links
                const pagination = document.querySelector('.pagination');
                pagination.innerHTML = ''; // Clear current pagination links
                for (let i = 1; i <= data.pages; i++) {
                    var li = document.createElement('li');
                    li.className = 'page-item' + (i === data.currentPage ? ' active' : '');
                    li.innerHTML = '<a class="page-link" href="javascript:void(0);" data-page="' + i + '">' + i + '</a>';
                    pagination.appendChild(li);
                }

                // Add click event listener to new pagination links
                document.querySelectorAll('.page-link').forEach(link => {
                    link.addEventListener('click', (event) => {
                        const page = event.target.getAttribute('data-page');
                        console.log(page);
                        sortAndFilterOrders(sortValue, filterValue, page);
                    });
                });
                console.log("Finish pagination");

            }).catch(err => console.log(err))

        };

    </script>



</div>